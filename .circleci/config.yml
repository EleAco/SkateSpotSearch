# docker-compose.ymlファイルを使用して簡潔にcircleciを導入してみる

version: 2
jobs:
  rspec&rubocop_job:
    machine:
      image: circleci/classic:edge
    working_directory: /home/circleci/app
    steps:
      - checkout
      - run:
          name: コンテナをビルド
          command: |
            docker-compose build
      - run:
          name: 起動
          command: |
            docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: yarnアップグレード
          command: docker-compose run app yarn upgrade
      - run:
          name: webpackerコンパイル
          command: docker-compose run app bundle exec rails webpacker:compile RAILS_ENV=test
      - run:
          name: 再起動
          command: |
            docker-compose down
            docker-compose up --build -d
      - run:
          name: db:create&migrate
          when: always
          command: docker-compose run app bundle exec rails db:migrate:reset RAILS_ENV=test
      - run:
          name: Rubocop修正
          command: docker-compose run app bundle exec rubocop --auto-correct
      - run:
          name: Rspecテスト
          command: docker-compose run app bin/rspec
      - store_artifacts:
          path: tmp/screenshots/
          destination: screen-shots

# developブランチへpushされた時、deploy_jobが実行される。
workflows:
  version: 2
  deploy:
    jobs:
      - rspec&rubocop_job:
          filters:
            branches:
              only:
                - develop