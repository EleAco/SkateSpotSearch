# docker-compose.ymlファイルを使用して簡潔にcircleciを導入してみる

version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    working_directory: ~/sss
    steps:
      - checkout

      - run:
          name: docker-composeをインストール
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: コンテナをビルドしてバックグラウンドで起動
          command: |
            set -x
            docker-compose up --build -d

      - run:
          name: コンテナを停止して削除
          command: |
            set -x
            docker-compose down

      - run:
          name: 再起動 && packs-test/manifestを作成
          command: |
            set -x
            docker-compose up -d
            docker-compose exec app yarn upgrade
            docker-compose exec app bundle exec rails webpacker:compile RAILS_ENV=test

      - run:
          name: Rspecテスト実行
          command: |
            mkdir /tmp/test-results
            docker-compose exec app bundle exec rails db:create RAILS_ENV=test
            docker-compose exec app bundle exec rails db:migrate:reset RAILS_ENV=test
            docker-compose exec app bundle exec rails db:seed RAILS_ENV=test

            TEST_FILES="$(circleci tests glob 'spec/**/*_spec.rb' | circleci tests split --split-by=timings)"
            docker-compose exec app bin/rspec --format progress \
                                                                  --format RspecJunitFormatter \
                                                                  --out /tmp/test-results/rspec.xml \
                                                                  $TEST_FILES

      - run:
          name: Rubocopコマンド実行
          command: |
            docker-compose exec app bundle exec rubocop

      - run:
          name: コンテナを停止して削除
          command: docker-compose down
