{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/fronts/packs/google.js","webpack:///./app/fronts/src/javascripts/google/routesmap.js","webpack:///./app/fronts/src/javascripts/google/postmap.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","addEventListener","routesmap","google","maps","Map","document","getElementById","center","lat","lng","zoom","infoWindow","InfoWindow","navigator","geolocation","setPosition","getCenter","setContent","open","getCurrentPosition","position","pos","coords","latitude","longitude","latlng","gon","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","setMap","request","origin","destination","travelMode","route","result","status","setDirections","directionsData","routes","legs","innerHTML","distance","text","duration","alert","codeAddress","address","marker","geocoder","Geocoder","map","geocode","results","GeocoderStatus","OK","setCenter","geometry","location","Marker","console","log","addListener","e","lat_lng","animation","Animation","DROP","panTo","getClickLatLng","latLng","getAddress","onclick","onload"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,qBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,UAIjBlC,EAAoBA,EAAoBmC,EAAI,I,kCClFrD,oB,iBCAAC,OAAOC,iBAAiB,QAAQ,WAE9B,IAAIC,EAAY,IAAIC,OAAOC,KAAKC,IAAIC,SAASC,eAAe,UAAW,CACrEC,OAAQ,CAACC,IAAK,UAAWC,IAAK,YAC9BC,KAAM,KAGJC,EAAa,IAAIT,OAAOC,KAAKS,WAI7BC,UAAUC,cAEZH,EAAWI,YAAYd,EAAUe,aAEjCL,EAAWM,WAAW,4EAEtBN,EAAWO,KAAKjB,IAIlBY,UAAUC,YAAYK,oBAAmB,SAASC,GAGhD,IAAIC,EAAM,CACRb,IAAKY,EAASE,OAAOC,SACrBd,IAAKW,EAASE,OAAOE,WAInBC,EAAS,CACXjB,IAAKkB,IAAIlB,IACTC,IAAKiB,IAAIjB,KAIPkB,EAAoB,IAAIzB,OAAOC,KAAKyB,kBAEpCC,EAAqB,IAAI3B,OAAOC,KAAK2B,mBAEzCD,EAAmBE,OAAO9B,GAG1B,IAAI+B,EAAU,CACZC,OAAQZ,EAERa,YAAaT,EACbU,WAAY,WAKdR,EAAkBS,MAAMJ,GACtB,SAASK,EAAQC,GACf,GAAe,OAAXA,EAAiB,CACnBT,EAAmBU,cAAcF,GACjC,IAAIG,EAAiBH,EAAOI,OAAO,GAAGC,KAAK,GAC3CrC,SAASC,eAAe,SAASqC,WAAaH,EAAeI,SAASC,KACtExC,SAASC,eAAe,SAASqC,WAAaH,EAAeM,SAASD,UAEtEE,MAAM,qEAAgBT,SAI3B,WAED3B,EAAWI,YAAYd,EAAUe,aAEjCL,EAAWM,WAAW,6HAEtBN,EAAWO,KAAKjB,U,iBCtEpBF,OAAOC,iBAAiB,oBAAoB,YAC3B,WACb,SAASgD,EAAYC,GAErB,IAEIC,EAFAC,EAAW,IAAIjD,OAAOC,KAAKiD,SAS3BC,EAAM,IAAInD,OAAOC,KAAKC,IAAIC,SAASC,eAAe,WALrC,CACfI,KAAM,KAMAyC,EAASG,QAAS,CAAE,QAAWL,IAAU,SAASM,EAASjB,GAErDA,GAAUpC,OAAOC,KAAKqD,eAAeC,IAEvCJ,EAAIK,UAAUH,EAAQ,GAAGI,SAASC,UAElCvD,SAASC,eAAe,OAAOtB,MAAMuE,EAAQ,GAAGI,SAASC,SAASpD,MAClEH,SAASC,eAAe,OAAOtB,MAAMuE,EAAQ,GAAGI,SAASC,SAASnD,MAElEyC,EAAS,IAAIhD,OAAOC,KAAK0D,OAAO,CAC9BR,IAAKA,EACLjC,SAAUmC,EAAQ,GAAGI,SAASC,YAIlCE,QAAQC,IAAI,wDAA0DzB,MAKhFe,EAAIW,YAAY,SAAS,SAASC,IAGlC,SAAwBC,EAASb,GAEzBhD,SAASC,eAAe,OAAOtB,MAAMkF,EAAQ1D,MAC7CH,SAASC,eAAe,OAAOtB,MAAMkF,EAAQzD,MAE7CyC,EAAOnB,OAAO,MACdmB,EAAS,IAAIhD,OAAOC,KAAK0D,OAAO,CAC9BzC,SAAU8C,EACVb,IAAKA,EACLc,UAAWjE,OAAOC,KAAKiE,UAAUC,OAGnChB,EAAIiB,MAAMJ,GAdVK,CAAeN,EAAEO,OAAQnB,MAmBjC,MAAO,CACDoB,WAAY,WAEGpE,SAASC,eAAe,cAE9BoE,QAAU,WAIf1B,EAFc3C,SAASC,eAAe,WAAWtB,QAKnDe,OAAO4E,OAAS,WAId3B,EAFc3C,SAASC,eAAe,WAAWtB,WApE9C,GA2EPyF","file":"js/google-e0964b29db2ce47450f4.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","import \"../src/javascripts/google/routesmap.js\";\nimport \"../src/javascripts/google/postmap.js\";","window.addEventListener('load', function initMap () {\n  //マップを生成して表示\n  var routesmap = new google.maps.Map(document.getElementById('routes'), {\n    center: {lat: 35.681167, lng: 139.767052},\n    zoom: 15\n  });\n  //情報ウィンドウのインスタンスの生成\n  var infoWindow = new google.maps.InfoWindow;\n\n  //ブラウザが Geolocation に対応しているかを判定\n  //対応していない場合の処理\n  if(!navigator.geolocation){\n    //情報ウィンドウの位置をマップの中心位置に指定\n    infoWindow.setPosition(routesmap.getCenter());\n    //情報ウィンドウのコンテンツを設定\n    infoWindow.setContent('Geolocation に対応していません。');\n    //情報ウィンドウを表示\n    infoWindow.open(routesmap);\n  }\n\n  //ブラウザが対応している場合、position にユーザーの位置情報が入る\n  navigator.geolocation.getCurrentPosition(function(position) {\n    //[スタート地点]\n    //position から緯度経度（ユーザーの位置）のオブジェクトを作成し変数に代入\n    var pos = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    };\n    //[到着地点]\n    //gon gemで定義したmapモデル内のlatitudeとlongitudeを使用\n    var latlng = {\n      lat: gon.lat,\n      lng: gon.lng\n    };\n\n    //DirectionsService のオブジェクトを生成\n    var directionsService = new google.maps.DirectionsService();\n    //DirectionsRenderer のオブジェクトを生成\n    var directionsRenderer = new google.maps.DirectionsRenderer();\n    //directionsRenderer と地図を紐付け\n    directionsRenderer.setMap(routesmap);\n\n    // ルートを取得するリクエスト\n    var request = {\n      origin: pos,      // 出発地点の緯度経度（ユーザーの位置）\n      //gon gemで定義した目的地をlatlngに格納したものを使用\n      destination: latlng, // 到着地点\n      travelMode: 'DRIVING',  //ドライブ（デフォルト）\n    };\n\n    //DirectionsService のオブジェクトのメソッド route() にリクエストを渡し、\n    //コールバック関数で結果を setDirections(result) で directionsRenderer にセットして表示\n    directionsService.route(request,\n      function(result, status) {//ステータスがOKの場合、\n        if (status === 'OK') {\n          directionsRenderer.setDirections(result);     //取得したルート（結果：result）をセット\n          var directionsData = result.routes[0].legs[0];//（結果：result）から、取得したlegs以下のステータスをdirectionsDataに代入。\n          document.getElementById('msg_d').innerHTML += directionsData.distance.text　// 変数　directionsData　内の distanceをhtmlで取得\n          document.getElementById('msg_t').innerHTML += directionsData.duration.text　// 変数　directionsData　内の durationをhtmlで取得\n        }else{\n          alert(\"取得できませんでした：\" + status);\n      }\n    });\n\n  }, function() {  //位置情報の取得をユーザーがブロックした場合のコールバック\n    //情報ウィンドウの位置をマップの中心位置に指定\n    infoWindow.setPosition(routesmap.getCenter());\n    //情報ウィンドウのコンテンツを設定\n    infoWindow.setContent('Error: あなたの現在地が取得できませんでした。');\n    //情報ウィンドウを表示\n    infoWindow.open(routesmap);\n  });\n});","window.addEventListener('DOMContentLoaded', function getMap () {\n  var postMap = (function() {\n    function codeAddress(address) {\n    // google.maps.Geocoder()コンストラクタのインスタンスを生成\n    var geocoder = new google.maps.Geocoder();\n    //マーカー変数用意\n    var marker;\n    // 地図表示に関するオプション\n    var mapOptions = {\n      zoom: 16\n    };\n\n    // 地図を表示させるインスタンスを生成\n    var map = new google.maps.Map(document.getElementById(\"newpost\"), mapOptions);\n            // geocoder.geocode()メソッドを実行\n            geocoder.geocode( { 'address': address}, function(results, status) {\n              // ジオコーディングが成功した場合\n              if (status == google.maps.GeocoderStatus.OK) {\n                // 変換した緯度・経度情報を地図の中心に表示\n                map.setCenter(results[0].geometry.location);\n                //☆表示している地図上の緯度経度\n                document.getElementById('lat').value=results[0].geometry.location.lat();\n                document.getElementById('lng').value=results[0].geometry.location.lng();\n                // マーカー設定\n                marker = new google.maps.Marker({\n                  map: map,\n                  position: results[0].geometry.location\n              });\n            // ジオコーディングが成功しなかった場合\n            } else {\n              console.log('Geocode was not successful for the following reason: ' + status);\n            }\n    });\n\n    // マップをクリックで位置変更\n    map.addListener('click', function(e) {\n            getClickLatLng(e.latLng, map);\n    });\n    function getClickLatLng(lat_lng, map) {\n            //☆表示している地図上の緯度経度\n            document.getElementById('lat').value=lat_lng.lat();\n            document.getElementById('lng').value=lat_lng.lng();\n            // マーカーを設置\n            marker.setMap(null);\n            marker = new google.maps.Marker({\n              position: lat_lng,\n              map: map,\n              animation: google.maps.Animation.DROP\n            });\n            // 座標の中心をずらす\n            map.panTo(lat_lng);\n            }\n    }\n\n    //inputのvalueで検索して地図を表示\n    return {\n          getAddress: function() {\n            // ボタンに指定したid要素を取得\n            var button = document.getElementById(\"map_button\");\n            // ボタンが押された時の処理\n            button.onclick = function() {\n              // フォームに入力された住所情報を取得\n              var address = document.getElementById(\"address\").value;\n              // 取得した住所を引数に指定してcodeAddress()関数を実行\n              codeAddress(address);\n            }\n            //読み込まれたときに地図を表示\n            window.onload = function(){\n              // フォームに入力された住所情報を取得\n              var address = document.getElementById(\"address\").value;\n              // 取得した住所を引数に指定してcodeAddress()関数を実行\n              codeAddress(address);\n              }\n            }\n          };\n    })();\n  postMap.getAddress();\n  });"],"sourceRoot":""}